#!/usr/bin/python2
'''
    pidof - An implementation of the 'pidof' command, designed to replace the
      buggy and incomplete version that ships with cygwin. Can be used on
      other Linux/Unix systems, but those folks should stick with procps-ng
      provided version.

    Copyright (c) 2014, 2016 by Timothy Savannah, All Rights Reserved.

    Licensed under the terms of the GNU General Public License, version 3.0.
    This program should have shipped with a copy of this license as, 'LICENSE'.

    The current license can be obtained at:
      https://raw.githubusercontent.com/kata198/cygwin-ps-misc/master/LICENSE
'''

import subprocess
import sys

if len(sys.argv) < 2:
	sys.stderr.write("Usage: pidof [prog1] (optional: [prog2] [prog3...]\n")
	sys.exit(1)


pids = []
for procName in sys.argv[1:]:
	pipe = subprocess.Popen("ps -ea | grep " + procName, shell=True, stdout=subprocess.PIPE)
	outputLines = pipe.stdout.read().replace("\r", "").split("\n")
	ret = pipe.wait()
	if ret != 0:
		# No results
		continue
	for line in outputLines:
		if not line:
			continue
		lineSplit = [item for item in line.split(' ') if item]
		cmd = lineSplit[-1].split('/')[-1]
		if cmd == procName:
			try:
				pid = int(lineSplit[0].strip())
			except:
				pid = int(lineSplit[1].strip())
			pid = str(pid)
			if pid not in pids:
				pids.append(pid)
				

if len(pids) > 0:
    pidsStr = ' '.join(pids)
    print pidsStr
    sys.exit(0)
else:
    sys.exit(1)
